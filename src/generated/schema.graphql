### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type AuthPayload {
  user: User
}

type Brand {
  createdAt: DateTime!
  id: ID!
  name: String!
  products(after: String, before: String, first: Int, last: Int, orderBy: ProductOrderByInput, skip: Int, where: ProductWhereInput): [Product!]
  updatedAt: DateTime!
}

input BrandWhereInput {
  AND: [BrandWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [BrandWhereInput!]
  OR: [BrandWhereInput!]
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Cart {
  createdAt: DateTime!
  id: ID!
  items(after: String, before: String, first: Int, last: Int, orderBy: CartItemOrderByInput, skip: Int, where: CartItemWhereInput): [CartItem!]
  updatedAt: DateTime!
  user: User!
}

type CartItem {
  createdAt: DateTime!
  id: ID!
  product: Product!
  quantity: Int!
  updatedAt: DateTime!
  variants: [String!]!
}

enum CartItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  quantity_ASC
  quantity_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CartItemWhereInput {
  AND: [CartItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [CartItemWhereInput!]
  OR: [CartItemWhereInput!]
  product: ProductWhereInput
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input CartWhereInput {
  AND: [CartWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  items_every: CartItemWhereInput
  items_none: CartItemWhereInput
  items_some: CartItemWhereInput
  NOT: [CartWhereInput!]
  OR: [CartWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

type Category {
  createdAt: DateTime!
  id: ID!
  name: String!
  product(after: String, before: String, first: Int, last: Int, orderBy: ProductOrderByInput, skip: Int, where: ProductWhereInput): [Product!]
  updatedAt: DateTime!
}

enum CategoryOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CategoryWhereInput {
  AND: [CategoryWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [CategoryWhereInput!]
  OR: [CategoryWhereInput!]
  product_every: ProductWhereInput
  product_none: ProductWhereInput
  product_some: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

scalar DateTime

type Forum {
  avatarPic: String!
  coverPic: String!
  createdAt: DateTime!
  description: String
  id: ID!
  members(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
  name: String!
  posts(after: String, before: String, first: Int, last: Int, orderBy: ForumPostOrderByInput, skip: Int, where: ForumPostWhereInput): [ForumPost!]
  updatedAt: DateTime!
}

type ForumPost {
  content: String
  createdAt: DateTime!
  forum: Forum!
  id: ID!
  postedBy: User!
  title: String!
  type: ForumPostType!
  updatedAt: DateTime!
}

enum ForumPostOrderByInput {
  content_ASC
  content_DESC
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
}

enum ForumPostType {
  LINK
  MEDIA
  POST
}

input ForumPostWhereInput {
  AND: [ForumPostWhereInput!]
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  forum: ForumWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ForumPostWhereInput!]
  OR: [ForumPostWhereInput!]
  postedBy: UserWhereInput
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  type: ForumPostType
  type_in: [ForumPostType!]
  type_not: ForumPostType
  type_not_in: [ForumPostType!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input ForumWhereInput {
  AND: [ForumWhereInput!]
  avatarPic: String
  avatarPic_contains: String
  avatarPic_ends_with: String
  avatarPic_gt: String
  avatarPic_gte: String
  avatarPic_in: [String!]
  avatarPic_lt: String
  avatarPic_lte: String
  avatarPic_not: String
  avatarPic_not_contains: String
  avatarPic_not_ends_with: String
  avatarPic_not_in: [String!]
  avatarPic_not_starts_with: String
  avatarPic_starts_with: String
  coverPic: String
  coverPic_contains: String
  coverPic_ends_with: String
  coverPic_gt: String
  coverPic_gte: String
  coverPic_in: [String!]
  coverPic_lt: String
  coverPic_lte: String
  coverPic_not: String
  coverPic_not_contains: String
  coverPic_not_ends_with: String
  coverPic_not_in: [String!]
  coverPic_not_starts_with: String
  coverPic_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  members_every: UserWhereInput
  members_none: UserWhereInput
  members_some: UserWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ForumWhereInput!]
  OR: [ForumWhereInput!]
  posts_every: ForumPostWhereInput
  posts_none: ForumPostWhereInput
  posts_some: ForumPostWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Mutation {
  addItemToCart(productId: ID!, quantity: Int!, variants: [String!]): Cart
  addVariant(name: String!, productId: ID!, values: [String!]): Variant
  createForum(avatarPic: String, coverPic: String, description: String, name: String!): Forum
  createForumPost(content: String, forumId: String!, title: String!, type: String!): ForumPost
  createProduct(brand: String!, categories: [String!], description: String!, id: ID!, images: [String!], price: String!, tags: [String!], title: String!): Product
  createProductReview(productId: ID!, rating: Int!, review: String): ProductReview
  createShopDraft(category: String!, description: String!, live: Boolean, name: String!, ownersIds: [ID!]): Shop
  deleteCartItem(itemId: ID!): CartItem
  login(idToken: String!): AuthPayload
  logout: AuthPayload
  publishShop(id: ID): Shop
  signUp(email: String, emailVerified: Boolean, idToken: String!, isAnonymous: Boolean!, name: String, profilePic: String): AuthPayload
  updateShop(description: String, id: ID, images: [String!], name: String): Shop
  updateUser(email: String, images: [String!], name: String, password: String, username: String): User
  updateVariant(name: String, values: [String!], variantId: ID!): Variant
}

type Product {
  brand: Brand
  categories(after: String, before: String, first: Int, last: Int, orderBy: CategoryOrderByInput, skip: Int, where: CategoryWhereInput): [Category!]
  createdAt: DateTime!
  description: String!
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: ProductImageOrderByInput, skip: Int, where: ProductImageWhereInput): [ProductImage!]
  price: String!
  reviews(after: String, before: String, first: Int, last: Int, orderBy: ProductReviewOrderByInput, skip: Int, where: ProductReviewWhereInput): [ProductReview!]
  shop: Shop!
  tags(after: String, before: String, first: Int, last: Int, orderBy: TagOrderByInput, skip: Int, where: TagWhereInput): [Tag!]
  title: String!
  updatedAt: DateTime!
  variants(after: String, before: String, first: Int, last: Int, orderBy: VariantOrderByInput, skip: Int, where: VariantWhereInput): [Variant!]
}

type ProductImage {
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  product: Product
  updatedAt: DateTime!
}

enum ProductImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProductImageWhereInput {
  AND: [ProductImageWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  imageUrl: String
  imageUrl_contains: String
  imageUrl_ends_with: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_ends_with: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_starts_with: String
  NOT: [ProductImageWhereInput!]
  OR: [ProductImageWhereInput!]
  product: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum ProductOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  price_ASC
  price_DESC
  title_ASC
  title_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type ProductReview {
  createdAt: DateTime!
  id: ID!
  product: Product!
  rating: Int!
  review: String
  updatedAt: DateTime!
  user: User!
}

enum ProductReviewOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  rating_ASC
  rating_DESC
  review_ASC
  review_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ProductReviewWhereInput {
  AND: [ProductReviewWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [ProductReviewWhereInput!]
  OR: [ProductReviewWhereInput!]
  product: ProductWhereInput
  rating: Int
  rating_gt: Int
  rating_gte: Int
  rating_in: [Int!]
  rating_lt: Int
  rating_lte: Int
  rating_not: Int
  rating_not_in: [Int!]
  review: String
  review_contains: String
  review_ends_with: String
  review_gt: String
  review_gte: String
  review_in: [String!]
  review_lt: String
  review_lte: String
  review_not: String
  review_not_contains: String
  review_not_ends_with: String
  review_not_in: [String!]
  review_not_starts_with: String
  review_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

input ProductWhereInput {
  AND: [ProductWhereInput!]
  brand: BrandWhereInput
  categories_every: CategoryWhereInput
  categories_none: CategoryWhereInput
  categories_some: CategoryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: ProductImageWhereInput
  images_none: ProductImageWhereInput
  images_some: ProductImageWhereInput
  NOT: [ProductWhereInput!]
  OR: [ProductWhereInput!]
  price: String
  price_contains: String
  price_ends_with: String
  price_gt: String
  price_gte: String
  price_in: [String!]
  price_lt: String
  price_lte: String
  price_not: String
  price_not_contains: String
  price_not_ends_with: String
  price_not_in: [String!]
  price_not_starts_with: String
  price_starts_with: String
  reviews_every: ProductReviewWhereInput
  reviews_none: ProductReviewWhereInput
  reviews_some: ProductReviewWhereInput
  shop: ShopWhereInput
  tags_every: TagWhereInput
  tags_none: TagWhereInput
  tags_some: TagWhereInput
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  variants_every: VariantWhereInput
  variants_none: VariantWhereInput
  variants_some: VariantWhereInput
}

type Query {
  filterCategories(searchString: String): [Category!]
  filterForums(searchString: String): [Forum!]
  filterUsers(searchString: String): [User!]
  getMeCart: [Cart!]
  me: User
  product(id: ID): Product
  productReviews(productId: ID!): [ProductReview!]
  shop(id: ID): Shop
}

type Shop {
  category: String!
  createdAt: DateTime!
  description: String!
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: ShopImageOrderByInput, skip: Int, where: ShopImageWhereInput): [ShopImage!]
  live: Boolean!
  name: String!
  owners(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
  products(after: String, before: String, first: Int, last: Int, orderBy: ProductOrderByInput, skip: Int, where: ProductWhereInput): [Product!]
  updatedAt: DateTime!
}

type ShopImage {
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  shop: Shop
  updatedAt: DateTime!
}

enum ShopImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ShopImageWhereInput {
  AND: [ShopImageWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  imageUrl: String
  imageUrl_contains: String
  imageUrl_ends_with: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_ends_with: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_starts_with: String
  NOT: [ShopImageWhereInput!]
  OR: [ShopImageWhereInput!]
  shop: ShopWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input ShopWhereInput {
  AND: [ShopWhereInput!]
  category: String
  category_contains: String
  category_ends_with: String
  category_gt: String
  category_gte: String
  category_in: [String!]
  category_lt: String
  category_lte: String
  category_not: String
  category_not_contains: String
  category_not_ends_with: String
  category_not_in: [String!]
  category_not_starts_with: String
  category_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: ShopImageWhereInput
  images_none: ShopImageWhereInput
  images_some: ShopImageWhereInput
  live: Boolean
  live_not: Boolean
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ShopWhereInput!]
  OR: [ShopWhereInput!]
  owners_every: UserWhereInput
  owners_none: UserWhereInput
  owners_some: UserWhereInput
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Tag {
  createdAt: DateTime!
  id: ID!
  name: String!
  products(after: String, before: String, first: Int, last: Int, orderBy: ProductOrderByInput, skip: Int, where: ProductWhereInput): [Product!]
  updatedAt: DateTime!
}

enum TagOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input TagWhereInput {
  AND: [TagWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  products_every: ProductWhereInput
  products_none: ProductWhereInput
  products_some: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type User {
  email: String
  emailVerified: Boolean
  firebaseId: String!
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: UserImageOrderByInput, skip: Int, where: UserImageWhereInput): [UserImage!]
  isAnonymous: Boolean!
  name: String
  profilePic: String
  shops: [Shop!]
  username: String
}

type UserImage {
  createdAt: DateTime!
  id: ID!
  imageUrl: String!
  updatedAt: DateTime!
  user: User
}

enum UserImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserImageWhereInput {
  AND: [UserImageWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  imageUrl: String
  imageUrl_contains: String
  imageUrl_ends_with: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_ends_with: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_starts_with: String
  NOT: [UserImageWhereInput!]
  OR: [UserImageWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  user: UserWhereInput
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  emailVerified_ASC
  emailVerified_DESC
  firebaseId_ASC
  firebaseId_DESC
  id_ASC
  id_DESC
  isAnonymous_ASC
  isAnonymous_DESC
  name_ASC
  name_DESC
  profilePic_ASC
  profilePic_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  cartItems: CartWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  emailVerified: Boolean
  emailVerified_not: Boolean
  firebaseId: String
  firebaseId_contains: String
  firebaseId_ends_with: String
  firebaseId_gt: String
  firebaseId_gte: String
  firebaseId_in: [String!]
  firebaseId_lt: String
  firebaseId_lte: String
  firebaseId_not: String
  firebaseId_not_contains: String
  firebaseId_not_ends_with: String
  firebaseId_not_in: [String!]
  firebaseId_not_starts_with: String
  firebaseId_starts_with: String
  forumposts_every: ForumPostWhereInput
  forumposts_none: ForumPostWhereInput
  forumposts_some: ForumPostWhereInput
  forums_every: ForumWhereInput
  forums_none: ForumWhereInput
  forums_some: ForumWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: UserImageWhereInput
  images_none: UserImageWhereInput
  images_some: UserImageWhereInput
  isAnonymous: Boolean
  isAnonymous_not: Boolean
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  productReviews_every: ProductReviewWhereInput
  productReviews_none: ProductReviewWhereInput
  productReviews_some: ProductReviewWhereInput
  profilePic: String
  profilePic_contains: String
  profilePic_ends_with: String
  profilePic_gt: String
  profilePic_gte: String
  profilePic_in: [String!]
  profilePic_lt: String
  profilePic_lte: String
  profilePic_not: String
  profilePic_not_contains: String
  profilePic_not_ends_with: String
  profilePic_not_in: [String!]
  profilePic_not_starts_with: String
  profilePic_starts_with: String
  shops_every: ShopWhereInput
  shops_none: ShopWhereInput
  shops_some: ShopWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}

type Variant {
  createdAt: DateTime!
  id: ID!
  name: String!
  product: Product!
  updatedAt: DateTime!
  values: [String!]!
}

enum VariantOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input VariantWhereInput {
  AND: [VariantWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [VariantWhereInput!]
  OR: [VariantWhereInput!]
  product: ProductWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}
