### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

scalar DateTime

type Mutation {
  createShopDraft(description: String, live: Boolean, name: String, ownersIds: [ID!]): Shop
  login(email: String, password: String): AuthPayload
  publishShop(id: ID): Shop
  signUp(email: String, name: String, password: String): AuthPayload
  updateShop(description: String, id: ID, images: [String!], name: String): Shop
  updateUser(email: String, images: [String!], name: String, password: String, username: String): User
}

type Query {
  me: User
  shop(id: ID): Shop
}

type Shop {
  createdAt: DateTime!
  description: String!
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: ShopImageOrderByInput, skip: Int, where: ShopImageWhereInput): [ShopImage!]
  live: Boolean!
  name: String!
  owners(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]
  updatedAt: DateTime!
}

type ShopImage {
  id: ID!
  imageUrl: String!
  shop: Shop!
}

enum ShopImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ShopImageWhereInput {
  AND: [ShopImageWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  imageUrl: String
  imageUrl_contains: String
  imageUrl_ends_with: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_ends_with: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_starts_with: String
  NOT: [ShopImageWhereInput!]
  OR: [ShopImageWhereInput!]
  shop: ShopWhereInput
}

input ShopWhereInput {
  AND: [ShopWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: ShopImageWhereInput
  images_none: ShopImageWhereInput
  images_some: ShopImageWhereInput
  live: Boolean
  live_not: Boolean
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [ShopWhereInput!]
  OR: [ShopWhereInput!]
  owners_every: UserWhereInput
  owners_none: UserWhereInput
  owners_some: UserWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type User {
  email: String!
  id: ID!
  images(after: String, before: String, first: Int, last: Int, orderBy: UserImageOrderByInput, skip: Int, where: UserImageWhereInput): [UserImage!]
  name: String!
  shops: [Shop!]
  username: String!
}

type UserImage {
  id: ID!
  imageUrl: String!
  user: User!
}

enum UserImageOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  imageUrl_ASC
  imageUrl_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input UserImageWhereInput {
  AND: [UserImageWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  imageUrl: String
  imageUrl_contains: String
  imageUrl_ends_with: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_not: String
  imageUrl_not_contains: String
  imageUrl_not_ends_with: String
  imageUrl_not_in: [String!]
  imageUrl_not_starts_with: String
  imageUrl_starts_with: String
  NOT: [UserImageWhereInput!]
  OR: [UserImageWhereInput!]
  user: UserWhereInput
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  images_every: UserImageWhereInput
  images_none: UserImageWhereInput
  images_some: UserImageWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  shops_every: ShopWhereInput
  shops_none: ShopWhereInput
  shops_some: ShopWhereInput
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}
